

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Mon Mar 26 09:58:12 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1571
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 1.43
    17                           ; Generated 25/07/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC12F1571 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0015                     	;# 
    67  0016                     	;# 
    68  0016                     	;# 
    69  0017                     	;# 
    70  0018                     	;# 
    71  0019                     	;# 
    72  001A                     	;# 
    73  001B                     	;# 
    74  001C                     	;# 
    75  008C                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0095                     	;# 
    80  0096                     	;# 
    81  0097                     	;# 
    82  0098                     	;# 
    83  0099                     	;# 
    84  009A                     	;# 
    85  009B                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009E                     	;# 
    90  009F                     	;# 
    91  010C                     	;# 
    92  0111                     	;# 
    93  0112                     	;# 
    94  0115                     	;# 
    95  0116                     	;# 
    96  0117                     	;# 
    97  0118                     	;# 
    98  0119                     	;# 
    99  011D                     	;# 
   100  011D                     	;# 
   101  018C                     	;# 
   102  0191                     	;# 
   103  0191                     	;# 
   104  0192                     	;# 
   105  0193                     	;# 
   106  0193                     	;# 
   107  0194                     	;# 
   108  0195                     	;# 
   109  0196                     	;# 
   110  0197                     	;# 
   111  020C                     	;# 
   112  028C                     	;# 
   113  030C                     	;# 
   114  038C                     	;# 
   115  0391                     	;# 
   116  0392                     	;# 
   117  0393                     	;# 
   118  0691                     	;# 
   119  0692                     	;# 
   120  0693                     	;# 
   121  0694                     	;# 
   122  0695                     	;# 
   123  0D8E                     	;# 
   124  0D8F                     	;# 
   125  0D90                     	;# 
   126  0D91                     	;# 
   127  0D91                     	;# 
   128  0D92                     	;# 
   129  0D93                     	;# 
   130  0D93                     	;# 
   131  0D94                     	;# 
   132  0D95                     	;# 
   133  0D95                     	;# 
   134  0D96                     	;# 
   135  0D97                     	;# 
   136  0D97                     	;# 
   137  0D98                     	;# 
   138  0D99                     	;# 
   139  0D99                     	;# 
   140  0D9A                     	;# 
   141  0D9B                     	;# 
   142  0D9C                     	;# 
   143  0D9C                     	;# 
   144  0D9D                     	;# 
   145  0D9D                     	;# 
   146  0D9E                     	;# 
   147  0D9F                     	;# 
   148  0DA0                     	;# 
   149  0DA1                     	;# 
   150  0DA1                     	;# 
   151  0DA2                     	;# 
   152  0DA3                     	;# 
   153  0DA3                     	;# 
   154  0DA4                     	;# 
   155  0DA5                     	;# 
   156  0DA5                     	;# 
   157  0DA6                     	;# 
   158  0DA7                     	;# 
   159  0DA7                     	;# 
   160  0DA8                     	;# 
   161  0DA9                     	;# 
   162  0DA9                     	;# 
   163  0DAA                     	;# 
   164  0DAB                     	;# 
   165  0DAC                     	;# 
   166  0DAC                     	;# 
   167  0DAD                     	;# 
   168  0DAD                     	;# 
   169  0DAE                     	;# 
   170  0DAF                     	;# 
   171  0DB0                     	;# 
   172  0DB1                     	;# 
   173  0DB1                     	;# 
   174  0DB2                     	;# 
   175  0DB3                     	;# 
   176  0DB3                     	;# 
   177  0DB4                     	;# 
   178  0DB5                     	;# 
   179  0DB5                     	;# 
   180  0DB6                     	;# 
   181  0DB7                     	;# 
   182  0DB7                     	;# 
   183  0DB8                     	;# 
   184  0DB9                     	;# 
   185  0DB9                     	;# 
   186  0DBA                     	;# 
   187  0DBB                     	;# 
   188  0DBC                     	;# 
   189  0DBC                     	;# 
   190  0DBD                     	;# 
   191  0DBD                     	;# 
   192  0DBE                     	;# 
   193  0DBF                     	;# 
   194  0DC0                     	;# 
   195  0FE4                     	;# 
   196  0FE5                     	;# 
   197  0FE6                     	;# 
   198  0FE7                     	;# 
   199  0FE8                     	;# 
   200  0FE8                     	;# 
   201  0FE9                     	;# 
   202  0FEA                     	;# 
   203  0FEA                     	;# 
   204  0FEB                     	;# 
   205  0FED                     	;# 
   206  0FEE                     	;# 
   207  0FEE                     	;# 
   208  0FEF                     	;# 
   209                           
   210                           	psect	nvCOMMON
   211  0079                     __pnvCOMMON:	
   212  0079                     _adc:	
   213  0079                     	ds	2
   214  000C                     _PORTA	set	12
   215  0062                     _RA2	set	98
   216  0065                     _RA5	set	101
   217  009B                     _ADRESL	set	155
   218  009C                     _ADRESH	set	156
   219  009D                     _ADCON0	set	157
   220  009E                     _ADCON1	set	158
   221  0099                     _OSCCON	set	153
   222  008C                     _TRISA	set	140
   223  04E9                     _GO_nDONE	set	1257
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  03FA                     start_initialization:	
   229  03FA                     __initialization:	
   230                           
   231                           ; Clear objects allocated to COMMON
   232  03FA  01F5               	clrf	__pbssCOMMON& (0+127)
   233  03FB  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   234  03FC  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   235  03FD  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   236  03FE                     end_of_initialization:	
   237                           ;End of C runtime variable initialization code
   238                           
   239  03FE                     __end_of__initialization:	
   240  03FE  0020               	movlb	0
   241  03FF  2B7F               	ljmp	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMMON
   244  0075                     __pbssCOMMON:	
   245  0075                     _ADCL:	
   246  0075                     	ds	2
   247  0077                     _ADCH:	
   248  0077                     	ds	2
   249                           
   250                           	psect	cstackCOMMON
   251  0070                     __pcstackCOMMON:	
   252  0070                     ?_initializers:	
   253  0070                     ??_initializers:	
   254                           ; 1 bytes @ 0x0
   255                           
   256  0070                     ?_ADC_Init:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ??_ADC_Init:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ?_blink_LED_F:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ??_blink_LED_F:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_blink_LED_S:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ??_blink_LED_S:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ?_main:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_ADC1_Read:	
   278                           ; 1 bytes @ 0x0
   279                           
   280                           
   281                           ; 2 bytes @ 0x0
   282  0070                     	ds	2
   283  0072                     ??_ADC1_Read:	
   284                           
   285                           ; 1 bytes @ 0x2
   286  0072                     	ds	2
   287  0074                     _ADC1_Read$66:	
   288                           
   289                           ; 1 bytes @ 0x4
   290  0074                     	ds	1
   291  0075                     ??_main:	
   292                           
   293                           	psect	maintext
   294  037F                     __pmaintext:	
   295                           ; 1 bytes @ 0x5
   296 ;;
   297 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   298 ;;
   299 ;; *************** function _main *****************
   300 ;; Defined at:
   301 ;;		line 53 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, status,2, status,0, pclath, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : B1F/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1
   315 ;;      Params:         0       0       0
   316 ;;      Locals:         0       0       0
   317 ;;      Temps:          0       0       0
   318 ;;      Totals:         0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels required when called:    1
   321 ;; This function calls:
   322 ;;		_ADC1_Read
   323 ;;		_ADC_Init
   324 ;;		_blink_LED_F
   325 ;;		_blink_LED_S
   326 ;;		_initializers
   327 ;; This function is called by:
   328 ;;		Startup code after reset
   329 ;; This function uses a non-reentrant model
   330 ;;
   331                           
   332                           
   333                           ;psect for function _main
   334  037F                     _main:	
   335                           
   336                           ;main.c: 56: initializers();
   337                           
   338                           ;incstack = 0
   339                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   340  037F  2376               	fcall	_initializers
   341                           
   342                           ;main.c: 57: ADC_Init();
   343  0380  2372               	fcall	_ADC_Init
   344  0381  2B83               	goto	l43
   345  0382                     l577:	
   346                           
   347                           ;main.c: 68: blink_LED_F();
   348  0382  2391               	fcall	_blink_LED_F
   349  0383                     l43:	
   350                           ;main.c: 59: while(1)
   351                           
   352                           ;main.c: 69: }
   353                           
   354                           
   355                           ;main.c: 60: {
   356                           ;main.c: 62: adc = ADC1_Read();
   357  0383  23BF               	fcall	_ADC1_Read
   358  0384  0871               	movf	?_ADC1_Read+1,w
   359  0385  00FA               	movwf	_adc+1
   360  0386  0870               	movf	?_ADC1_Read,w
   361  0387  00F9               	movwf	_adc
   362                           
   363                           ;main.c: 66: if(adc <= 255){
   364  0388  3001               	movlw	1
   365  0389  027A               	subwf	_adc+1,w
   366  038A  3000               	movlw	0
   367  038B  1903               	skipnz
   368  038C  0279               	subwf	_adc,w
   369  038D  1C03               	btfss	3,0
   370  038E  2B82               	goto	l577
   371                           
   372                           ;main.c: 70: else{
   373                           ;main.c: 72: blink_LED_S();
   374  038F  23A4               	fcall	_blink_LED_S
   375  0390  2B83               	goto	l43
   376  0391                     __end_of_main:	
   377                           ;main.c: 73: }
   378                           ;main.c: 75: }
   379                           ;main.c: 76: return;
   380                           
   381                           
   382                           	psect	text1
   383  0376                     __ptext1:	
   384 ;; *************** function _initializers *****************
   385 ;; Defined at:
   386 ;;		line 83 in file "main.c"
   387 ;; Parameters:    Size  Location     Type
   388 ;;		None
   389 ;; Auto vars:     Size  Location     Type
   390 ;;		None
   391 ;; Return value:  Size  Location     Type
   392 ;;                  1    wreg      void 
   393 ;; Registers used:
   394 ;;		wreg, status,2
   395 ;; Tracked objects:
   396 ;;		On entry : 0/0
   397 ;;		On exit  : 0/0
   398 ;;		Unchanged: 0/0
   399 ;; Data sizes:     COMMON   BANK0   BANK1
   400 ;;      Params:         0       0       0
   401 ;;      Locals:         0       0       0
   402 ;;      Temps:          0       0       0
   403 ;;      Totals:         0       0       0
   404 ;;Total ram usage:        0 bytes
   405 ;; Hardware stack levels used:    1
   406 ;; This function calls:
   407 ;;		Nothing
   408 ;; This function is called by:
   409 ;;		_main
   410 ;; This function uses a non-reentrant model
   411 ;;
   412                           
   413                           
   414                           ;psect for function _initializers
   415  0376                     _initializers:	
   416                           
   417                           ;main.c: 87: TRISA = 0x1B;
   418                           
   419                           ;incstack = 0
   420                           ; Regs used in _initializers: [wreg+status,2]
   421  0376  301B               	movlw	27
   422  0377  0021               	movlb	1	; select bank1
   423  0378  008C               	movwf	12	;volatile
   424                           
   425                           ;main.c: 89: PORTA = 0X00;
   426  0379  0020               	movlb	0	; select bank0
   427  037A  018C               	clrf	12	;volatile
   428                           
   429                           ;main.c: 91: OSCCON = 0x6A;
   430  037B  306A               	movlw	106
   431  037C  0021               	movlb	1	; select bank1
   432  037D  0099               	movwf	25	;volatile
   433  037E  0008               	return
   434  037F                     __end_of_initializers:	
   435                           
   436                           	psect	text2
   437  03A4                     __ptext2:	
   438 ;; *************** function _blink_LED_S *****************
   439 ;; Defined at:
   440 ;;		line 173 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1
   454 ;;      Params:         0       0       0
   455 ;;      Locals:         0       0       0
   456 ;;      Temps:          2       0       0
   457 ;;      Totals:         2       0       0
   458 ;;Total ram usage:        2 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; This function calls:
   461 ;;		Nothing
   462 ;; This function is called by:
   463 ;;		_main
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           
   468                           ;psect for function _blink_LED_S
   469  03A4                     _blink_LED_S:	
   470                           
   471                           ;main.c: 175: RA2 = 1;
   472                           
   473                           ;incstack = 0
   474                           ; Regs used in _blink_LED_S: [wreg]
   475  03A4  0020               	movlb	0	; select bank0
   476  03A5  150C               	bsf	12,2	;volatile
   477                           
   478                           ;main.c: 176: _delay((unsigned long)((500)*(4000000/4000.0)));
   479  03A6  3003               	movlw	3
   480  03A7  00F1               	movwf	??_blink_LED_S+1
   481  03A8  308A               	movlw	138
   482  03A9  00F0               	movwf	??_blink_LED_S
   483  03AA  3056               	movlw	86
   484  03AB                     u127:	
   485  03AB  0B89               	decfsz	9,f
   486  03AC  2BAB               	goto	u127
   487  03AD  0BF0               	decfsz	??_blink_LED_S,f
   488  03AE  2BAB               	goto	u127
   489  03AF  0BF1               	decfsz	??_blink_LED_S+1,f
   490  03B0  2BAB               	goto	u127
   491                           
   492                           ;main.c: 177: RA2 = 0;
   493  03B1  0020               	movlb	0	; select bank0
   494  03B2  110C               	bcf	12,2	;volatile
   495                           
   496                           ;main.c: 178: _delay((unsigned long)((500)*(4000000/4000.0)));
   497  03B3  3003               	movlw	3
   498  03B4  00F1               	movwf	??_blink_LED_S+1
   499  03B5  308A               	movlw	138
   500  03B6  00F0               	movwf	??_blink_LED_S
   501  03B7  3056               	movlw	86
   502  03B8                     u137:	
   503  03B8  0B89               	decfsz	9,f
   504  03B9  2BB8               	goto	u137
   505  03BA  0BF0               	decfsz	??_blink_LED_S,f
   506  03BB  2BB8               	goto	u137
   507  03BC  0BF1               	decfsz	??_blink_LED_S+1,f
   508  03BD  2BB8               	goto	u137
   509  03BE  0008               	return
   510  03BF                     __end_of_blink_LED_S:	
   511                           
   512                           	psect	text3
   513  0391                     __ptext3:	
   514 ;; *************** function _blink_LED_F *****************
   515 ;; Defined at:
   516 ;;		line 165 in file "main.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;		None
   519 ;; Auto vars:     Size  Location     Type
   520 ;;		None
   521 ;; Return value:  Size  Location     Type
   522 ;;                  1    wreg      void 
   523 ;; Registers used:
   524 ;;		wreg
   525 ;; Tracked objects:
   526 ;;		On entry : 0/0
   527 ;;		On exit  : 0/0
   528 ;;		Unchanged: 0/0
   529 ;; Data sizes:     COMMON   BANK0   BANK1
   530 ;;      Params:         0       0       0
   531 ;;      Locals:         0       0       0
   532 ;;      Temps:          1       0       0
   533 ;;      Totals:         1       0       0
   534 ;;Total ram usage:        1 bytes
   535 ;; Hardware stack levels used:    1
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           
   544                           ;psect for function _blink_LED_F
   545  0391                     _blink_LED_F:	
   546                           
   547                           ;main.c: 167: RA2 = 1;
   548                           
   549                           ;incstack = 0
   550                           ; Regs used in _blink_LED_F: [wreg]
   551  0391  0020               	movlb	0	; select bank0
   552  0392  150C               	bsf	12,2	;volatile
   553                           
   554                           ;main.c: 168: _delay((unsigned long)((100)*(4000000/4000.0)));
   555  0393  3082               	movlw	130
   556  0394  00F0               	movwf	??_blink_LED_F
   557  0395  30DE               	movlw	222
   558  0396                     u147:	
   559  0396  0B89               	decfsz	9,f
   560  0397  2B96               	goto	u147
   561  0398  0BF0               	decfsz	??_blink_LED_F,f
   562  0399  2B96               	goto	u147
   563                           
   564                           ;main.c: 169: RA2 = 0;
   565  039A  0020               	movlb	0	; select bank0
   566  039B  110C               	bcf	12,2	;volatile
   567                           
   568                           ;main.c: 170: _delay((unsigned long)((100)*(4000000/4000.0)));
   569  039C  3082               	movlw	130
   570  039D  00F0               	movwf	??_blink_LED_F
   571  039E  30DE               	movlw	222
   572  039F                     u157:	
   573  039F  0B89               	decfsz	9,f
   574  03A0  2B9F               	goto	u157
   575  03A1  0BF0               	decfsz	??_blink_LED_F,f
   576  03A2  2B9F               	goto	u157
   577  03A3  0008               	return
   578  03A4                     __end_of_blink_LED_F:	
   579                           
   580                           	psect	text4
   581  0372                     __ptext4:	
   582 ;; *************** function _ADC_Init *****************
   583 ;; Defined at:
   584 ;;		line 95 in file "main.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;		None
   589 ;; Return value:  Size  Location     Type
   590 ;;                  1    wreg      void 
   591 ;; Registers used:
   592 ;;		wreg
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMMON   BANK0   BANK1
   598 ;;      Params:         0       0       0
   599 ;;      Locals:         0       0       0
   600 ;;      Temps:          0       0       0
   601 ;;      Totals:         0       0       0
   602 ;;Total ram usage:        0 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; This function calls:
   605 ;;		Nothing
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _ADC_Init
   613  0372                     _ADC_Init:	
   614                           
   615                           ;main.c: 102: ADCON1 = 0x80;
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _ADC_Init: [wreg]
   619  0372  3080               	movlw	128
   620  0373  0021               	movlb	1	; select bank1
   621  0374  009E               	movwf	30	;volatile
   622  0375  0008               	return
   623  0376                     __end_of_ADC_Init:	
   624                           
   625                           	psect	text5
   626  03BF                     __ptext5:	
   627 ;; *************** function _ADC1_Read *****************
   628 ;; Defined at:
   629 ;;		line 106 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  2    0[COMMON] unsigned int 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1
   643 ;;      Params:         2       0       0
   644 ;;      Locals:         1       0       0
   645 ;;      Temps:          2       0       0
   646 ;;      Totals:         5       0       0
   647 ;;Total ram usage:        5 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; This function calls:
   650 ;;		Nothing
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _ADC1_Read
   658  03BF                     _ADC1_Read:	
   659                           
   660                           ;main.c: 108: ADCON0 = 0x05;
   661                           
   662                           ;incstack = 0
   663                           ; Regs used in _ADC1_Read: [wreg+status,2+status,0]
   664  03BF  3005               	movlw	5
   665  03C0  0021               	movlb	1	; select bank1
   666  03C1  009D               	movwf	29	;volatile
   667                           
   668                           ;main.c: 109: _delay((unsigned long)((2)*(4000000/4000.0)));
   669  03C2  3003               	movlw	3
   670  03C3  00F2               	movwf	??_ADC1_Read
   671  03C4  3098               	movlw	152
   672  03C5                     u167:	
   673  03C5  0B89               	decfsz	9,f
   674  03C6  2BC5               	goto	u167
   675  03C7  0BF2               	decfsz	??_ADC1_Read,f
   676  03C8  2BC5               	goto	u167
   677                           
   678                           ;main.c: 111: GO_nDONE = 1;
   679  03C9  0021               	movlb	1	; select bank1
   680  03CA  149D               	bsf	29,1	;volatile
   681  03CB                     l57:	
   682                           ;main.c: 112: while(GO_nDONE);
   683                           
   684  03CB  189D               	btfsc	29,1	;volatile
   685  03CC  2BCB               	goto	l57
   686                           
   687                           ;main.c: 116: ADCH = ADRESH;
   688  03CD  081C               	movf	28,w	;volatile
   689  03CE  00F2               	movwf	??_ADC1_Read
   690  03CF  01F3               	clrf	??_ADC1_Read+1
   691  03D0  0872               	movf	??_ADC1_Read,w
   692  03D1  00F7               	movwf	_ADCH
   693  03D2  0873               	movf	??_ADC1_Read+1,w
   694  03D3  00F8               	movwf	_ADCH+1
   695                           
   696                           ;main.c: 117: ADCL = ADRESL;
   697  03D4  081B               	movf	27,w	;volatile
   698  03D5  00F2               	movwf	??_ADC1_Read
   699  03D6  01F3               	clrf	??_ADC1_Read+1
   700  03D7  0872               	movf	??_ADC1_Read,w
   701  03D8  00F5               	movwf	_ADCL
   702  03D9  0873               	movf	??_ADC1_Read+1,w
   703  03DA  00F6               	movwf	_ADCL+1
   704                           
   705                           ;main.c: 118: ADCH = ADRESH && 0x03;
   706  03DB  01F4               	clrf	_ADC1_Read$66
   707  03DC  081C               	movf	28,w	;volatile
   708  03DD  1903               	btfsc	3,2
   709  03DE  2BE1               	goto	l565
   710  03DF  01F4               	clrf	_ADC1_Read$66
   711  03E0  0AF4               	incf	_ADC1_Read$66,f
   712  03E1                     l565:	
   713  03E1  0874               	movf	_ADC1_Read$66,w
   714  03E2  00F2               	movwf	??_ADC1_Read
   715  03E3  01F3               	clrf	??_ADC1_Read+1
   716  03E4  0872               	movf	??_ADC1_Read,w
   717  03E5  00F7               	movwf	_ADCH
   718  03E6  0873               	movf	??_ADC1_Read+1,w
   719  03E7  00F8               	movwf	_ADCH+1
   720                           
   721                           ;main.c: 119: ADCH = (ADCH<<8);
   722  03E8  0877               	movf	_ADCH,w
   723  03E9  00F3               	movwf	??_ADC1_Read+1
   724  03EA  01F2               	clrf	??_ADC1_Read
   725  03EB  0872               	movf	??_ADC1_Read,w
   726  03EC  00F7               	movwf	_ADCH
   727  03ED  0873               	movf	??_ADC1_Read+1,w
   728  03EE  00F8               	movwf	_ADCH+1
   729                           
   730                           ;main.c: 120: ADCH = ADCH + ADCL;
   731  03EF  0875               	movf	_ADCL,w
   732  03F0  0777               	addwf	_ADCH,w
   733  03F1  00F7               	movwf	_ADCH
   734  03F2  0876               	movf	_ADCL+1,w
   735  03F3  3D78               	addwfc	_ADCH+1,w
   736  03F4  00F8               	movwf	_ADCH+1
   737                           
   738                           ;main.c: 121: return ADCH;
   739  03F5  0878               	movf	_ADCH+1,w
   740  03F6  00F1               	movwf	?_ADC1_Read+1
   741  03F7  0877               	movf	_ADCH,w
   742  03F8  00F0               	movwf	?_ADC1_Read
   743  03F9  0008               	return
   744  03FA                     __end_of_ADC1_Read:	
   745  007E                     btemp	set	126	;btemp
   746  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC1_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      24
                          _ADC1_Read
                           _ADC_Init
                        _blink_LED_F
                        _blink_LED_S
                       _initializers
 ---------------------------------------------------------------------------------
 (1) _initializers                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _blink_LED_S                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _blink_LED_F                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC1_Read                                            5     3      2      24
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC1_Read
   _ADC_Init
   _blink_LED_F
   _blink_LED_S
   _initializers

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Mon Mar 26 09:58:12 2018

            __CFG_CP$OFF 0000                       l43 0383                       l57 03CB  
                    l565 03E1                      l577 0382                      _RA2 0062  
                    _RA5 0065                      u127 03AB                      u137 03B8  
                    u147 0396                      u157 039F                      u167 03C5  
                    _adc 0079             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_LVP$OFF 0000                     _ADCH 0077                     _ADCL 0075  
           __CFG_WRT$OFF 0000                     _main 037F                     btemp 007E  
       __end_of_ADC_Init 0376                     start 0001            __CFG_MCLRE$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000        __end_of_ADC1_Read 03FA  
                  _PORTA 000C                    _TRISA 008C           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 03FA  
           __end_of_main 0391     __size_of_blink_LED_F 0013     __size_of_blink_LED_S 001B  
                 ??_main 0075           __CFG_PLLEN$OFF 0000                   _ADCON0 009D  
                 _ADCON1 009E                   _ADRESH 009C                   _ADRESL 009B  
                 _OSCCON 0099           __CFG_PWRTE$OFF 0000            ?_initializers 0070  
         __CFG_STVREN$ON 0000                ?_ADC_Init 0070  __end_of__initialization 03FE  
         ??_initializers 0070           __pcstackCOMMON 0070               ??_ADC_Init 0070  
             __pnvCOMMON 0079               __pmaintext 037F                _ADC1_Read 03BF  
                __ptext1 0376                  __ptext2 03A4                  __ptext3 0391  
                __ptext4 0372                  __ptext5 03BF     __end_of_initializers 037F  
             ?_ADC1_Read 0070     end_of_initialization 03FE            ??_blink_LED_F 0070  
          ??_blink_LED_S 0070         __CFG_FOSC$INTOSC 0000        __size_of_ADC_Init 0004  
    __end_of_blink_LED_F 03A4      __end_of_blink_LED_S 03BF      start_initialization 03FA  
            ??_ADC1_Read 0072         __CFG_LPBOREN$OFF 0000    __size_of_initializers 0009  
            __pbssCOMMON 0075                ___latbits 0000             _initializers 0376  
            _blink_LED_F 0391              _blink_LED_S 03A4                 _ADC_Init 0372  
               _GO_nDONE 04E9            __size_of_main 0012        __CFG_CLKOUTEN$OFF 0000  
           ?_blink_LED_F 0070             ?_blink_LED_S 0070             _ADC1_Read$66 0074  
     __size_of_ADC1_Read 003B  
